{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\\\\app\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\",\"filename\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\\\\app\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.6:development":{"value":{"code":"const express = require('express');\nconst db = require('../db/db');\nconst imageRoutes = require('../routers/imageRouter');\nconst app = express();\nconst port = process.env.PORT || 3000;\n\n// Kết nối đến cơ sở dữ liệu PostgreSQL\ndb.connect();\n\n// Middleware để xử lý các request có nội dung JSON\napp.use(express.json());\n\n// Sử dụng định tuyến cho ảnh\napp.use('/api/images', imageRoutes);\n\n// Khởi động server\napp.listen(port, () => {\n  console.log(`Server is running on port http://localhost:${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImRiIiwiaW1hZ2VSb3V0ZXMiLCJhcHAiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25uZWN0IiwidXNlIiwianNvbiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IkQ6XFxQSEFNSFVOR1xcY29kZS1kZW1vXFxjb3ZlckltYWdlXFxhcHBcXCIsInNvdXJjZXMiOlsiYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vZGIvZGInKVxyXG5jb25zdCBpbWFnZVJvdXRlcyA9IHJlcXVpcmUoJy4uL3JvdXRlcnMvaW1hZ2VSb3V0ZXInKTtcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcclxuXHJcbi8vIEvhur90IG7hu5FpIMSR4bq/biBjxqEgc+G7nyBk4buvIGxp4buHdSBQb3N0Z3JlU1FMXHJcbmRiLmNvbm5lY3QoKTtcclxuXHJcbi8vIE1pZGRsZXdhcmUgxJHhu4MgeOG7rSBsw70gY8OhYyByZXF1ZXN0IGPDsyBu4buZaSBkdW5nIEpTT05cclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcblxyXG4vLyBT4butIGThu6VuZyDEkeG7i25oIHR1eeG6v24gY2hvIOG6o25oXHJcbmFwcC51c2UoJy9hcGkvaW1hZ2VzJywgaW1hZ2VSb3V0ZXMpO1xyXG5cclxuLy8gS2jhu59pIMSR4buZbmcgc2VydmVyXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0IGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fWApO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsTUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsVUFBVSxDQUFDO0FBQzlCLE1BQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLHdCQUF3QixDQUFDO0FBRXJELE1BQU1HLEdBQUcsR0FBR0osT0FBTyxDQUFDLENBQUM7QUFDckIsTUFBTUssSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxJQUFJLElBQUk7O0FBRXJDO0FBQ0FOLEVBQUUsQ0FBQ08sT0FBTyxDQUFDLENBQUM7O0FBRVo7QUFDQUwsR0FBRyxDQUFDTSxHQUFHLENBQUNWLE9BQU8sQ0FBQ1csSUFBSSxDQUFDLENBQUMsQ0FBQzs7QUFFdkI7QUFDQVAsR0FBRyxDQUFDTSxHQUFHLENBQUMsYUFBYSxFQUFFUCxXQUFXLENBQUM7O0FBRW5DO0FBQ0FDLEdBQUcsQ0FBQ1EsTUFBTSxDQUFDUCxJQUFJLEVBQUUsTUFBTTtFQUNyQlEsT0FBTyxDQUFDQyxHQUFHLENBQUUsOENBQTZDVCxJQUFLLEVBQUMsQ0FBQztBQUNuRSxDQUFDLENBQUMifQ==","map":{"version":3,"names":["express","require","db","imageRoutes","app","port","process","env","PORT","connect","use","json","listen","console","log"],"sourceRoot":"D:\\PHAMHUNG\\code-demo\\coverImage\\app\\","sources":["app.js"],"sourcesContent":["const express = require('express');\r\nconst db = require('../db/db')\r\nconst imageRoutes = require('../routers/imageRouter');\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\n\r\n// Kết nối đến cơ sở dữ liệu PostgreSQL\r\ndb.connect();\r\n\r\n// Middleware để xử lý các request có nội dung JSON\r\napp.use(express.json());\r\n\r\n// Sử dụng định tuyến cho ảnh\r\napp.use('/api/images', imageRoutes);\r\n\r\n// Khởi động server\r\napp.listen(port, () => {\r\n  console.log(`Server is running on port http://localhost:${port}`);\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,EAAE,GAAGD,OAAO,CAAC,UAAU,CAAC;AAC9B,MAAME,WAAW,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAErD,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;;AAErC;AACAN,EAAE,CAACO,OAAO,CAAC,CAAC;;AAEZ;AACAL,GAAG,CAACM,GAAG,CAACV,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAP,GAAG,CAACM,GAAG,CAAC,aAAa,EAAEP,WAAW,CAAC;;AAEnC;AACAC,GAAG,CAACQ,MAAM,CAACP,IAAI,EAAE,MAAM;EACrBQ,OAAO,CAACC,GAAG,CAAE,8CAA6CT,IAAK,EAAC,CAAC;AACnE,CAAC,CAAC"}},"mtime":1703834756747},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\\\\db\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\",\"filename\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\\\\db\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.6:development":{"value":{"code":"const {\n  Pool\n} = require('pg');\nconst pool = new Pool({\n  user: 'converimagedb_user',\n  host: 'dpg-cm73mlocmk4c738rih20-a.singapore-postgres.render.com',\n  database: 'converimagedb',\n  password: 'HP4EWDBbcQPh6NaGzvH5oxe3PvHGfFnd',\n  port: 5432,\n  ssl: {\n    rejectUnauthorized: false // Bạn có thể cần cấu hình phù hợp với môi trường sản xuất\n  }\n});\nmodule.exports = pool;\n// postgres://converimagedb_user:HP4EWDBbcQPh6NaGzvH5oxe3PvHGfFnd@dpg-cm73mlocmk4c738rih20-a/converimagedb\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQb29sIiwicmVxdWlyZSIsInBvb2wiLCJ1c2VyIiwiaG9zdCIsImRhdGFiYXNlIiwicGFzc3dvcmQiLCJwb3J0Iiwic3NsIiwicmVqZWN0VW5hdXRob3JpemVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXFBIQU1IVU5HXFxjb2RlLWRlbW9cXGNvdmVySW1hZ2VcXGRiXFwiLCJzb3VyY2VzIjpbImRiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUG9vbCB9ID0gcmVxdWlyZSgncGcnKTtcclxuXHJcbmNvbnN0IHBvb2wgPSBuZXcgUG9vbCh7XHJcbiAgdXNlcjogJ2NvbnZlcmltYWdlZGJfdXNlcicsXHJcbiAgaG9zdDogJ2RwZy1jbTczbWxvY21rNGM3MzhyaWgyMC1hLnNpbmdhcG9yZS1wb3N0Z3Jlcy5yZW5kZXIuY29tJyxcclxuICBkYXRhYmFzZTogJ2NvbnZlcmltYWdlZGInLFxyXG4gIHBhc3N3b3JkOiAnSFA0RVdEQmJjUVBoNk5hR3p2SDVveGUzUHZIR2ZGbmQnLFxyXG4gIHBvcnQ6IDU0MzIsXHJcbiAgc3NsOiB7XHJcbiAgICByZWplY3RVbmF1dGhvcml6ZWQ6IGZhbHNlLCAvLyBC4bqhbiBjw7MgdGjhu4MgY+G6p24gY+G6pXUgaMOsbmggcGjDuSBo4bujcCB24bubaSBtw7RpIHRyxrDhu51uZyBz4bqjbiB4deG6pXRcclxuICB9LFxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcG9vbDtcclxuLy8gcG9zdGdyZXM6Ly9jb252ZXJpbWFnZWRiX3VzZXI6SFA0RVdEQmJjUVBoNk5hR3p2SDVveGUzUHZIR2ZGbmRAZHBnLWNtNzNtbG9jbWs0YzczOHJpaDIwLWEvY29udmVyaW1hZ2VkYiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFLLENBQUMsR0FBR0MsT0FBTyxDQUFDLElBQUksQ0FBQztBQUU5QixNQUFNQyxJQUFJLEdBQUcsSUFBSUYsSUFBSSxDQUFDO0VBQ3BCRyxJQUFJLEVBQUUsb0JBQW9CO0VBQzFCQyxJQUFJLEVBQUUsMERBQTBEO0VBQ2hFQyxRQUFRLEVBQUUsZUFBZTtFQUN6QkMsUUFBUSxFQUFFLGtDQUFrQztFQUM1Q0MsSUFBSSxFQUFFLElBQUk7RUFDVkMsR0FBRyxFQUFFO0lBQ0hDLGtCQUFrQixFQUFFLEtBQUssQ0FBRTtFQUM3QjtBQUNGLENBQUMsQ0FBQztBQUVGQyxNQUFNLENBQUNDLE9BQU8sR0FBR1QsSUFBSTtBQUNyQiJ9","map":{"version":3,"names":["Pool","require","pool","user","host","database","password","port","ssl","rejectUnauthorized","module","exports"],"sourceRoot":"D:\\PHAMHUNG\\code-demo\\coverImage\\db\\","sources":["db.js"],"sourcesContent":["const { Pool } = require('pg');\r\n\r\nconst pool = new Pool({\r\n  user: 'converimagedb_user',\r\n  host: 'dpg-cm73mlocmk4c738rih20-a.singapore-postgres.render.com',\r\n  database: 'converimagedb',\r\n  password: 'HP4EWDBbcQPh6NaGzvH5oxe3PvHGfFnd',\r\n  port: 5432,\r\n  ssl: {\r\n    rejectUnauthorized: false, // Bạn có thể cần cấu hình phù hợp với môi trường sản xuất\r\n  },\r\n});\r\n\r\nmodule.exports = pool;\r\n// postgres://converimagedb_user:HP4EWDBbcQPh6NaGzvH5oxe3PvHGfFnd@dpg-cm73mlocmk4c738rih20-a/converimagedb"],"mappings":"AAAA,MAAM;EAAEA;AAAK,CAAC,GAAGC,OAAO,CAAC,IAAI,CAAC;AAE9B,MAAMC,IAAI,GAAG,IAAIF,IAAI,CAAC;EACpBG,IAAI,EAAE,oBAAoB;EAC1BC,IAAI,EAAE,0DAA0D;EAChEC,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,kCAAkC;EAC5CC,IAAI,EAAE,IAAI;EACVC,GAAG,EAAE;IACHC,kBAAkB,EAAE,KAAK,CAAE;EAC7B;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGT,IAAI;AACrB"}},"mtime":1703821029671},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\\\\routers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\",\"filename\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\\\\routers\\\\imageRouter.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.6:development":{"value":{"code":"const express = require('express');\nconst imageController = require('../controllers/imageController');\nconst router = express.Router();\nrouter.post('/convert-and-save', async (req, res) => {\n  try {\n    const {\n      outputImagePath,\n      outputPath,\n      customFileName\n    } = req.body;\n    await imageController.convertAndSaveToDB(outputImagePath, outputPath, customFileName);\n    res.status(200).json({\n      message: 'Conversion and saving completed successfully'\n    });\n  } catch (error) {\n    console.error('Error:', error);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\nrouter.post('/convert', async (req, res) => {\n  const {\n    outputImagePath,\n    partWidth,\n    partHeight\n  } = req.body;\n\n  // Kiểm tra dữ liệu đầu vào\n  if (!outputImagePath || !partWidth || !partHeight) {\n    return res.status(400).json({\n      error: 'Missing required parameters.'\n    });\n  }\n  try {\n    // Gọi hàm chuyển đổi từ imageController\n    const data = await imageController.textToImage(outputImagePath, partWidth, partHeight);\n    res.json({\n      message: 'Conversion completed successfully.',\n      data: data\n    });\n  } catch (error) {\n    console.error('Error:', error);\n    res.status(500).json({\n      error: 'Internal server error.'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImltYWdlQ29udHJvbGxlciIsInJvdXRlciIsIlJvdXRlciIsInBvc3QiLCJyZXEiLCJyZXMiLCJvdXRwdXRJbWFnZVBhdGgiLCJvdXRwdXRQYXRoIiwiY3VzdG9tRmlsZU5hbWUiLCJib2R5IiwiY29udmVydEFuZFNhdmVUb0RCIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJlcnJvciIsImNvbnNvbGUiLCJwYXJ0V2lkdGgiLCJwYXJ0SGVpZ2h0IiwiZGF0YSIsInRleHRUb0ltYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXFBIQU1IVU5HXFxjb2RlLWRlbW9cXGNvdmVySW1hZ2VcXHJvdXRlcnNcXCIsInNvdXJjZXMiOlsiaW1hZ2VSb3V0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgaW1hZ2VDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvaW1hZ2VDb250cm9sbGVyJyk7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxucm91dGVyLnBvc3QoJy9jb252ZXJ0LWFuZC1zYXZlJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgb3V0cHV0SW1hZ2VQYXRoLCBvdXRwdXRQYXRoLCBjdXN0b21GaWxlTmFtZSB9ID0gcmVxLmJvZHk7XHJcbiAgICBhd2FpdCBpbWFnZUNvbnRyb2xsZXIuY29udmVydEFuZFNhdmVUb0RCKG91dHB1dEltYWdlUGF0aCwgb3V0cHV0UGF0aCwgY3VzdG9tRmlsZU5hbWUpO1xyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiAnQ29udmVyc2lvbiBhbmQgc2F2aW5nIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHknIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyB9KTtcclxuICB9XHJcbn0pO1xyXG5cclxucm91dGVyLnBvc3QoJy9jb252ZXJ0JywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7IG91dHB1dEltYWdlUGF0aCwgcGFydFdpZHRoLCBwYXJ0SGVpZ2h0IH0gPSByZXEuYm9keTtcclxuXHJcbiAgICAvLyBLaeG7g20gdHJhIGThu68gbGnhu4d1IMSR4bqndSB2w6BvXHJcbiAgICBpZiAoIW91dHB1dEltYWdlUGF0aCB8fCAhcGFydFdpZHRoIHx8ICFwYXJ0SGVpZ2h0KSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcnMuJyB9KTtcclxuICAgIH1cclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIC8vIEfhu41pIGjDoG0gY2h1eeG7g24gxJHhu5VpIHThu6sgaW1hZ2VDb250cm9sbGVyXHJcbiAgICAgICBjb25zdCBkYXRhID0gIGF3YWl0IGltYWdlQ29udHJvbGxlci50ZXh0VG9JbWFnZShvdXRwdXRJbWFnZVBhdGgsIHBhcnRXaWR0aCwgcGFydEhlaWdodCk7XHJcbiAgICAgICAgcmVzLmpzb24oeyBtZXNzYWdlOiAnQ29udmVyc2lvbiBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LicsIGRhdGE6IGRhdGEgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yOicsIGVycm9yKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yLicgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLGdDQUFnQyxDQUFDO0FBRWpFLE1BQU1FLE1BQU0sR0FBR0gsT0FBTyxDQUFDSSxNQUFNLENBQUMsQ0FBQztBQUUvQkQsTUFBTSxDQUFDRSxJQUFJLENBQUMsbUJBQW1CLEVBQUUsT0FBT0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDbkQsSUFBSTtJQUNGLE1BQU07TUFBRUMsZUFBZTtNQUFFQyxVQUFVO01BQUVDO0lBQWUsQ0FBQyxHQUFHSixHQUFHLENBQUNLLElBQUk7SUFDaEUsTUFBTVQsZUFBZSxDQUFDVSxrQkFBa0IsQ0FBQ0osZUFBZSxFQUFFQyxVQUFVLEVBQUVDLGNBQWMsQ0FBQztJQUNyRkgsR0FBRyxDQUFDTSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztNQUFFQyxPQUFPLEVBQUU7SUFBK0MsQ0FBQyxDQUFDO0VBQ25GLENBQUMsQ0FBQyxPQUFPQyxLQUFLLEVBQUU7SUFDZEMsT0FBTyxDQUFDRCxLQUFLLENBQUMsUUFBUSxFQUFFQSxLQUFLLENBQUM7SUFDOUJULEdBQUcsQ0FBQ00sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7TUFBRUUsS0FBSyxFQUFFO0lBQXdCLENBQUMsQ0FBQztFQUMxRDtBQUNGLENBQUMsQ0FBQztBQUVGYixNQUFNLENBQUNFLElBQUksQ0FBQyxVQUFVLEVBQUUsT0FBT0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDeEMsTUFBTTtJQUFFQyxlQUFlO0lBQUVVLFNBQVM7SUFBRUM7RUFBVyxDQUFDLEdBQUdiLEdBQUcsQ0FBQ0ssSUFBSTs7RUFFM0Q7RUFDQSxJQUFJLENBQUNILGVBQWUsSUFBSSxDQUFDVSxTQUFTLElBQUksQ0FBQ0MsVUFBVSxFQUFFO0lBQy9DLE9BQU9aLEdBQUcsQ0FBQ00sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7TUFBRUUsS0FBSyxFQUFFO0lBQStCLENBQUMsQ0FBQztFQUMxRTtFQUVBLElBQUk7SUFDQTtJQUNELE1BQU1JLElBQUksR0FBSSxNQUFNbEIsZUFBZSxDQUFDbUIsV0FBVyxDQUFDYixlQUFlLEVBQUVVLFNBQVMsRUFBRUMsVUFBVSxDQUFDO0lBQ3RGWixHQUFHLENBQUNPLElBQUksQ0FBQztNQUFFQyxPQUFPLEVBQUUsb0NBQW9DO01BQUVLLElBQUksRUFBRUE7SUFBSyxDQUFDLENBQUM7RUFDM0UsQ0FBQyxDQUFDLE9BQU9KLEtBQUssRUFBRTtJQUNaQyxPQUFPLENBQUNELEtBQUssQ0FBQyxRQUFRLEVBQUVBLEtBQUssQ0FBQztJQUM5QlQsR0FBRyxDQUFDTSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztNQUFFRSxLQUFLLEVBQUU7SUFBeUIsQ0FBQyxDQUFDO0VBQzdEO0FBQ0osQ0FBQyxDQUFDO0FBR0ZNLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHcEIsTUFBTSJ9","map":{"version":3,"names":["express","require","imageController","router","Router","post","req","res","outputImagePath","outputPath","customFileName","body","convertAndSaveToDB","status","json","message","error","console","partWidth","partHeight","data","textToImage","module","exports"],"sourceRoot":"D:\\PHAMHUNG\\code-demo\\coverImage\\routers\\","sources":["imageRouter.js"],"sourcesContent":["const express = require('express');\r\nconst imageController = require('../controllers/imageController');\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post('/convert-and-save', async (req, res) => {\r\n  try {\r\n    const { outputImagePath, outputPath, customFileName } = req.body;\r\n    await imageController.convertAndSaveToDB(outputImagePath, outputPath, customFileName);\r\n    res.status(200).json({ message: 'Conversion and saving completed successfully' });\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    res.status(500).json({ error: 'Internal Server Error' });\r\n  }\r\n});\r\n\r\nrouter.post('/convert', async (req, res) => {\r\n    const { outputImagePath, partWidth, partHeight } = req.body;\r\n\r\n    // Kiểm tra dữ liệu đầu vào\r\n    if (!outputImagePath || !partWidth || !partHeight) {\r\n        return res.status(400).json({ error: 'Missing required parameters.' });\r\n    }\r\n\r\n    try {\r\n        // Gọi hàm chuyển đổi từ imageController\r\n       const data =  await imageController.textToImage(outputImagePath, partWidth, partHeight);\r\n        res.json({ message: 'Conversion completed successfully.', data: data });\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        res.status(500).json({ error: 'Internal server error.' });\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = router;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,eAAe,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAME,MAAM,GAAGH,OAAO,CAACI,MAAM,CAAC,CAAC;AAE/BD,MAAM,CAACE,IAAI,CAAC,mBAAmB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACnD,IAAI;IACF,MAAM;MAAEC,eAAe;MAAEC,UAAU;MAAEC;IAAe,CAAC,GAAGJ,GAAG,CAACK,IAAI;IAChE,MAAMT,eAAe,CAACU,kBAAkB,CAACJ,eAAe,EAAEC,UAAU,EAAEC,cAAc,CAAC;IACrFH,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA+C,CAAC,CAAC;EACnF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9BT,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;AAEFb,MAAM,CAACE,IAAI,CAAC,UAAU,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACxC,MAAM;IAAEC,eAAe;IAAEU,SAAS;IAAEC;EAAW,CAAC,GAAGb,GAAG,CAACK,IAAI;;EAE3D;EACA,IAAI,CAACH,eAAe,IAAI,CAACU,SAAS,IAAI,CAACC,UAAU,EAAE;IAC/C,OAAOZ,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,KAAK,EAAE;IAA+B,CAAC,CAAC;EAC1E;EAEA,IAAI;IACA;IACD,MAAMI,IAAI,GAAI,MAAMlB,eAAe,CAACmB,WAAW,CAACb,eAAe,EAAEU,SAAS,EAAEC,UAAU,CAAC;IACtFZ,GAAG,CAACO,IAAI,CAAC;MAAEC,OAAO,EAAE,oCAAoC;MAAEK,IAAI,EAAEA;IAAK,CAAC,CAAC;EAC3E,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9BT,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,KAAK,EAAE;IAAyB,CAAC,CAAC;EAC7D;AACJ,CAAC,CAAC;AAGFM,MAAM,CAACC,OAAO,GAAGpB,MAAM"}},"mtime":1703837001367},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\",\"filename\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\\\\controllers\\\\imageController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\PHAMHUNG\\\\code-demo\\\\coverImage\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.6:development":{"value":{"code":"const fs = require('fs');\nconst sharp = require('sharp');\nconst db = require('../db/db');\nasync function imageToText(inputImagePath, outputFolder, customFileName) {\n  // ... (phần code chuyển đổi từ trước)\n  // Kích thước của từng phần nhỏ\n  const partWidth = 4816;\n  const partHeight = 3072;\n  // Zoom factor\n  const zoom = 1.0;\n  // Đọc ảnh và chuyển đổi thành các phần nhỏ\n  const imageBuffer = fs.readFileSync(inputImagePath);\n  const image = sharp(imageBuffer);\n\n  // Tạo thư mục đầu ra nếu chưa tồn tại\n  if (!fs.existsSync(outputFolder)) {\n    fs.mkdirSync(outputFolder);\n  }\n  // Chuyển đổi và ghi vào các file văn bản\n  const imageMetadata = await image.metadata();\n  console.log('Image Metadata:', imageMetadata);\n  const resizedWidth = imageMetadata.width * zoom;\n  const resizedHeight = imageMetadata.height * zoom;\n  for (let top = 0; top < imageMetadata.height; top += partHeight) {\n    console.log('Vào vòng lặp top');\n    for (let left = 0; left < imageMetadata.width; left += partWidth) {\n      console.log('Vào vòng lặp left');\n      const adjustedWidth = Math.min(partWidth, imageMetadata.width - left);\n      const adjustedHeight = Math.min(partHeight, imageMetadata.height - top);\n      const adjustedLeft = Math.max(0, left);\n      const adjustedTop = Math.max(0, top);\n      const leftPercentage = adjustedLeft / imageMetadata.width;\n      const topPercentage = adjustedTop / imageMetadata.height;\n      const resizedBuffer = await image.jpeg().resize(resizedWidth, resizedHeight).toBuffer();\n      const extractedBuffer = await sharp(resizedBuffer).extract({\n        left: Math.floor(leftPercentage * resizedWidth),\n        top: Math.floor(topPercentage * resizedHeight),\n        width: adjustedWidth,\n        height: adjustedHeight\n      }).resize(adjustedWidth, adjustedHeight).toBuffer();\n      const base64String = 'data:image/jpeg;base64,' + Buffer.from(extractedBuffer).toString('base64');\n      const partFileName = `${outputFolder}/${customFileName}.txt`;\n      console.log(customFileName);\n      fs.writeFileSync(partFileName, base64String);\n      console.log('Đã ghi file:', partFileName);\n    }\n  }\n  console.log('Image to text conversion completed.');\n}\nasync function convertAndSaveToDB(inputImagePath, outputFolder, customFileName) {\n  try {\n    console.log(inputImagePath, outputFolder);\n    await imageToText(inputImagePath, outputFolder, customFileName);\n    const files = fs.readdirSync(outputFolder);\n    for (const file of files) {\n      const content = fs.readFileSync(`${outputFolder}/${file}`, 'base64');\n      await db.query('INSERT INTO images(name, content) VALUES($1, $2)', [file, content]);\n    }\n    console.log('Conversion and saving completed successfully');\n  } catch (error) {\n    console.error('Error:', error);\n    throw new Error('Conversion and saving failed');\n  }\n}\nasync function textToImage(outputImagePath, partWidth, partHeight) {\n  try {\n    // Thực hiện truy vấn cơ sở dữ liệu để lấy dữ liệu từ bảng 'images'\n    const result = await db.query('SELECT name, content FROM images');\n    if (result.rows.length === 0) {\n      console.error('No data found in the images table.');\n      return;\n    }\n\n    // Chuyển đổi từng bản ghi từ cơ sở dữ liệu thành ảnh và lưu vào mảng\n    const images = await Promise.all(result.rows.map(async row => {\n      const base64Data = row.content.replace(/\\\\/g, \"\");\n      const buffer = Buffer.from(base64Data, 'base64');\n      console.log(base64Data);\n      return buffer;\n    }));\n    const firstImageMetadata = await sharp(images[0]).metadata();\n\n    // Gộp ảnh\n    const mergedImage = await sharp({\n      create: {\n        width: partWidth * Math.ceil(firstImageMetadata.width / partWidth),\n        height: partHeight * Math.ceil(firstImageMetadata.height / partHeight),\n        channels: 4,\n        // Số kênh màu (4 cho RGBA)\n        background: {\n          r: 255,\n          g: 255,\n          b: 255,\n          alpha: 1\n        } // Màu nền\n      }\n    });\n\n    // Sử dụng phương thức composite để gộp ảnh\n    for (const image of images) {\n      mergedImage.composite([{\n        input: image,\n        left: 0,\n        top: 0\n      }]);\n    }\n\n    // Ghi ảnh gộp vào file với định dạng PNG\n    await mergedImage.toFormat('png').toFile(outputImagePath);\n    console.log('Text to image conversion completed.');\n\n    // Trả về đường dẫn tới tệp tin ảnh đã tạo\n    return outputImagePath;\n  } catch (error) {\n    console.error('Error during conversion:', error);\n    throw error;\n  }\n}\nmodule.exports = {\n  convertAndSaveToDB,\n  textToImage\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["fs","require","sharp","db","imageToText","inputImagePath","outputFolder","customFileName","partWidth","partHeight","zoom","imageBuffer","readFileSync","image","existsSync","mkdirSync","imageMetadata","metadata","console","log","resizedWidth","width","resizedHeight","height","top","left","adjustedWidth","Math","min","adjustedHeight","adjustedLeft","max","adjustedTop","leftPercentage","topPercentage","resizedBuffer","jpeg","resize","toBuffer","extractedBuffer","extract","floor","base64String","Buffer","from","toString","partFileName","writeFileSync","convertAndSaveToDB","files","readdirSync","file","content","query","error","Error","textToImage","outputImagePath","result","rows","length","images","Promise","all","map","row","base64Data","replace","buffer","firstImageMetadata","mergedImage","create","ceil","channels","background","r","g","b","alpha","composite","input","toFormat","toFile","module","exports"],"sourceRoot":"D:\\PHAMHUNG\\code-demo\\coverImage\\controllers\\","sources":["imageController.js"],"sourcesContent":["const fs = require('fs');\r\nconst sharp = require('sharp');\r\nconst db = require('../db/db');\r\n\r\nasync function imageToText(inputImagePath, outputFolder, customFileName) {\r\n    // ... (phần code chuyển đổi từ trước)\r\n    // Kích thước của từng phần nhỏ\r\n    const partWidth = 4816;\r\n    const partHeight = 3072;\r\n    // Zoom factor\r\n    const zoom = 1.0;\r\n    // Đọc ảnh và chuyển đổi thành các phần nhỏ\r\n    const imageBuffer = fs.readFileSync(inputImagePath);\r\n    const image = sharp(imageBuffer);\r\n\r\n    // Tạo thư mục đầu ra nếu chưa tồn tại\r\n    if (!fs.existsSync(outputFolder)) {\r\n        fs.mkdirSync(outputFolder);\r\n    }\r\n    // Chuyển đổi và ghi vào các file văn bản\r\n    const imageMetadata = await image.metadata();\r\n    console.log('Image Metadata:', imageMetadata);\r\n\r\n    const resizedWidth = imageMetadata.width * zoom;\r\n    const resizedHeight = imageMetadata.height * zoom;\r\n\r\n    for (let top = 0; top < imageMetadata.height; top += partHeight) {\r\n        console.log('Vào vòng lặp top');\r\n        for (let left = 0; left < imageMetadata.width; left += partWidth) {\r\n            console.log('Vào vòng lặp left');\r\n\r\n            const adjustedWidth = Math.min(partWidth, imageMetadata.width - left);\r\n            const adjustedHeight = Math.min(partHeight, imageMetadata.height - top);\r\n            const adjustedLeft = Math.max(0, left);\r\n            const adjustedTop = Math.max(0, top);\r\n\r\n            const leftPercentage = adjustedLeft / imageMetadata.width;\r\n            const topPercentage = adjustedTop / imageMetadata.height;\r\n\r\n            const resizedBuffer = await image\r\n                .jpeg()\r\n                .resize(resizedWidth, resizedHeight)\r\n                .toBuffer();\r\n\r\n            const extractedBuffer = await sharp(resizedBuffer)\r\n                .extract({\r\n                    left: Math.floor(leftPercentage * resizedWidth),\r\n                    top: Math.floor(topPercentage * resizedHeight),\r\n                    width: adjustedWidth,\r\n                    height: adjustedHeight\r\n                })\r\n                .resize(adjustedWidth, adjustedHeight)\r\n                .toBuffer();\r\n\r\n            const base64String = 'data:image/jpeg;base64,' + Buffer.from(extractedBuffer).toString('base64');\r\n            const partFileName = `${outputFolder}/${customFileName}.txt`;\r\n            console.log(customFileName);\r\n            fs.writeFileSync(partFileName, base64String);\r\n            console.log('Đã ghi file:', partFileName);\r\n        }\r\n    }\r\n    console.log('Image to text conversion completed.');\r\n}\r\n\r\nasync function convertAndSaveToDB(inputImagePath, outputFolder, customFileName) {\r\n    try {\r\n        console.log(inputImagePath, outputFolder);\r\n        await imageToText(inputImagePath, outputFolder, customFileName);\r\n\r\n        const files = fs.readdirSync(outputFolder);\r\n\r\n        for (const file of files) {\r\n            const content = fs.readFileSync(`${outputFolder}/${file}`, 'base64');\r\n            await db.query('INSERT INTO images(name, content) VALUES($1, $2)', [file, content]);\r\n        }\r\n        console.log('Conversion and saving completed successfully');\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        throw new Error('Conversion and saving failed');\r\n    }\r\n}\r\n\r\nasync function textToImage(outputImagePath, partWidth, partHeight) {\r\n    try {\r\n        // Thực hiện truy vấn cơ sở dữ liệu để lấy dữ liệu từ bảng 'images'\r\n        const result = await db.query('SELECT name, content FROM images');\r\n\r\n        if (result.rows.length === 0) {\r\n            console.error('No data found in the images table.');\r\n            return;\r\n        }\r\n\r\n        // Chuyển đổi từng bản ghi từ cơ sở dữ liệu thành ảnh và lưu vào mảng\r\n        const images = await Promise.all(result.rows.map(async (row) => {\r\n            const base64Data = row.content.replace(/\\\\/g, \"\");\r\n            const buffer = Buffer.from(base64Data, 'base64');\r\n            console.log(base64Data);\r\n            return buffer;\r\n        }));\r\n\r\n        const firstImageMetadata = await sharp(images[0]).metadata();\r\n\r\n        // Gộp ảnh\r\n        const mergedImage = await sharp({\r\n            create: {\r\n                width: partWidth * Math.ceil(firstImageMetadata.width / partWidth),\r\n                height: partHeight * Math.ceil(firstImageMetadata.height / partHeight),\r\n                channels: 4, // Số kênh màu (4 cho RGBA)\r\n                background: { r: 255, g: 255, b: 255, alpha: 1 } // Màu nền\r\n            }\r\n        });\r\n\r\n        // Sử dụng phương thức composite để gộp ảnh\r\n        for (const image of images) {\r\n            mergedImage.composite([{ input: image, left: 0, top: 0 }]);\r\n        }\r\n\r\n        // Ghi ảnh gộp vào file với định dạng PNG\r\n        await mergedImage.toFormat('png').toFile(outputImagePath);\r\n        console.log('Text to image conversion completed.');\r\n\r\n        // Trả về đường dẫn tới tệp tin ảnh đã tạo\r\n        return outputImagePath;\r\n    } catch (error) {\r\n        console.error('Error during conversion:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    convertAndSaveToDB,\r\n    textToImage\r\n};\r\n"],"mappings":"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"}},"mtime":1703836987550}}